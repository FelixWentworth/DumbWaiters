<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PlayGen.SUGAR.Unity</name>
    </assembly>
    <members>
        <member name="T:PlayGen.SUGAR.Unity.AccountUnityClient">
            <summary>
            Unity client for calls related to accounts
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.AccountUnityClient._landscapeInterface">
            <summary>
            Landscape UI object for this unity client. Can be left null if not required.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.AccountUnityClient._portraitInterface">
            <summary>
            Portrait UI object for this unity client. Can be left null if not required.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.AccountUnityClient.HasInterface">
            <summary>
            Has a UI object been provided for this Unity Client?
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.AccountUnityClient.IsActive">
            <summary>
            Is there a UI object and if so is it currently active?
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.AccountUnityClient.DisplayPanel(System.Action{System.Boolean})">
            <summary>
            Displays UI object if provided and allowAutoLogin is false. Attempts automatic sign in using provided details if allowAutoLogin is true.
            Note: allowAutoLogin is made false after automatic sign in is first attempted.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.AccountUnityClient.Hide">
            <summary>
            Hide the UI object if it is currently active.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.BaseAccountInterface">
            <summary>
            Base abstract class for controlling the UI object related to accounts
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseAccountInterface._name">
            <summary>
            Input field used for providing usernames. Required.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseAccountInterface._password">
            <summary>
            Input field used for providing passwords. Required.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseAccountInterface._loginButton">
            <summary>
            Button used to trigger attempting signing in. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseAccountInterface._registerButton">
            <summary>
            Button used to trigger attempting registration. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseAccountInterface._rememberMeToggle">
            <summary>
            Toggle used to remember the current user login details for easy log in
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseAccountInterface._closeButton">
            <summary>
            Button used to disable this object. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseAccountInterface._errorText">
            <summary>
            Text object which displays errors if/when they occur. Can be left null.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseAccountInterface.Awake">
            <summary>
            Base Awake method adds onClick listeners for the login, register and close buttons.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.ActorResponseAllowableActions">
            <summary>
            ActorResponse with additional information on if the current user can add and remove them.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.ActorResponseAllowableActions.Actor">
            <summary>
            ActorResponse contains the actor ID and Name.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.ActorResponseAllowableActions.CanAdd">
            <summary>
            Can the currently signed in user add or accept a request from this actor?
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.ActorResponseAllowableActions.CanRemove">
            <summary>
            Can the currently signed in user remove or reject a request from this actor?
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.BaseInterface">
            <summary>
            Base abstract class for controlling UI objects
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseInterface._errorText">
            <summary>
            Text object which displays errors if/when they occur. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseInterface._closeButton">
            <summary>
            Button used to disable this object. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseInterface._signinButton">
            <summary>
            Button used to display account UI object (if available) if no user is signed in. Can be left null.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseInterface.Awake">
            <summary>
            Base Awake method adds onClick listeners for the close and signin buttons.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseInterface.PreDisplay">
            <summary>
            Functionality triggered before displaying the UI object.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseInterface.Show(System.Boolean)">
            <summary>
            Used to display/redraw the UI on this object. Triggers methods in this order:
            HideInterfaces - abstract method used to enable/disable UI on this object and hide other UI objects.
            PreDraw - private method. Activates object using SUGARManager.Unity.EnableObject, resets error text and hides signin button.
            Draw - abstract method where creation and placement of the UI should be performed.
            ErrorDraw - where error text is determined and set, if required.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseInterface.HideInterfaces">
            <summary>
            Should be used to enable/disable UI on this object and hide other UI objects.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseInterface.Draw">
            <summary>
            Should be used to set, create and place UI on this object.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseInterface.ErrorDraw(System.Boolean)">
            <summary>
            Should be used to set error text and disable UI objects due to errors, if required. By default sets error text in case of no user being signed in or loading issues.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseInterface.LoadErrorText">
            <summary>
            Get error string if there were issues loading what was required.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseInterface.NoResultsErrorText">
            <summary>
            Get error string if there were no results to display.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseInterface.OnSignIn">
            <summary>
            Triggered by successful sign-in via this UI object. 
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.BaseUnityClient`1">
            <summary>
            Base class for UnityClient classes
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseUnityClient`1._landscapeInterface">
            <summary>
            Landscape UI object for this unity client. Can be left null if not required.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseUnityClient`1._portraitInterface">
            <summary>
            Portrait UI object for this unity client. Can be left null if not required.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.BaseUnityClient`1.HasInterface">
            <summary>
            Has a UI object been provided for this Unity Client?
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.BaseUnityClient`1.IsActive">
            <summary>
            Is there a UI object and if so is it currently active?
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUnityClient`1.Hide">
            <summary>
            Hide the UI object if it is currently active.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.BaseEvaluationListInterface">
            <summary>
            Base abstract class for controlling the UI object related to evaluation lists.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseEvaluationListInterface.HideInterfaces">
            <summary>
            Hides Account, GameLeaderboard, Leaderboard, UserFriend, GroupMember and UserGroup UI objects.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseEvaluationListInterface.ErrorDraw(System.Boolean)">
            <summary>
            Used to set error text in case of no user being signed in, loading issues or if no results are available.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseEvaluationListInterface.LoadErrorText">
            <summary>
            Get error string from Localization with key "EVALUATION_LOAD_ERROR" if there were issues loading the evaluation list.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseEvaluationListInterface.NoResultsErrorText">
            <summary>
            Get error string from Localization with key "NO_EVALUATION_ERROR" if there were no evaluations to display.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.BaseEvaluationPopupInterface">
            <summary>
            Base abstract class for controlling the UI object related to evaluation notifications.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseEvaluationPopupInterface._name">
            <summary>
            Text used for display notification string (usually evaluation name). Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseEvaluationPopupInterface._image">
            <summary>
            Image displayed alongside notification. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseEvaluationPopupInterface._evaluationQueue">
            <summary>
            Queue of notifications to be displayed.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseEvaluationPopupInterface.Display(PlayGen.SUGAR.Client.EvaluationEvents.EvaluationNotification)">
            <summary>
            Functionality to be triggered when a notification is received.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.EvaluationUnityClient">
            <summary>
            Unity client for calls related to evaluations.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.EvaluationUnityClient.Progress">
            <summary>
            Current completion status for evaluations in this application for this user.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.EvaluationUnityClient.DisplayAchievementList">
            <summary>
            Gathers current evaluation completion status and displays UI object if provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.EvaluationUnityClient.DisplayGroupAchievementList">
            <summary>
            Gathers current evaluation completion status and displays UI object if provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.EvaluationUnityClient.DisplaySkillList">
            <summary>
            Gathers current skill completion status and displays UI object if provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.EvaluationUnityClient.DisplayGroupSkillList">
            <summary>
            Gathers current skill completion status and displays UI object if provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.EvaluationUnityClient.ForceNotification(System.String)">
            <summary>
            Force an evaluation notification to be displayed with the provided text.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.BaseUserFriendInterface">
            <summary>
            Base abstract class for controlling the UI object related to friends lists
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUserFriendInterface.HideInterfaces">
            <summary>
            Hides Account, GameLeaderboard, Leaderboard, Evaluation, GroupMember and UserGroup UI objects.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUserFriendInterface.LoadErrorText">
            <summary>
            Get error string from Localization with key "FRIENDS_LOAD_ERROR" if there were issues loading the friends list.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUserFriendInterface.NoResultsErrorText">
            <summary>
            Get error string from Localization with key "NO_RESULTS_ERROR" if there were no friends to display.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUserFriendInterface.GetFriends">
            <summary>
            Get and display the friends list for the currently signed in user.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUserFriendInterface.GetPendingSent">
            <summary>
            Get and display the list of pending sent friend requests for the currently signed in user.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUserFriendInterface.GetPendingReceived">
            <summary>
            Get and display the list of pending received friend requests for the currently signed in user.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUserFriendInterface.GetSearchResults(System.String)">
            <summary>
            Get and display the search results for the provided string.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.UserFriendUnityClient">
            <summary>
            Unity client for calls related to user friends.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.UserFriendUnityClient.Friends">
            <summary>
            Friends list for currently signed in user.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.UserFriendUnityClient.PendingSent">
            <summary>
            Pending sent friend requests for currently signed in user.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.UserFriendUnityClient.PendingReceived">
            <summary>
            Pending received friend requests for currently signed in user.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.UserFriendUnityClient.SearchResults">
            <summary>
            Last set of search results.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.UserFriendUnityClient.Display">
            <summary>
            Updates lists and displays UI object if provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.UserFriendUnityClient.AddFriend(System.Int32,System.Boolean)">
            <summary>
            Send friend request to user with id provided. If reload is true, UI is also redrawn.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.UserFriendUnityClient.ManageFriendRequest(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Resolve friend request to user with id provided. If reload is true, UI is also redrawn.
            Reverse should be true if cancelling sent request. Accept and reverse cannot both be true.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.UserFriendUnityClient.RemoveFriend(System.Int32,System.Boolean)">
            <summary>
            Remove user with id provided from friends list. If reload is true, UI is also redrawn.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.UserFriendUnityClient.GetFriendsList(System.Action{System.Boolean})">
            <summary>
            Get friends list for the currently signed in user.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.GameDataUnityClient">
            <summary>
            Unity client for calls related to gamedata.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.GameDataUnityClient.GetHighest(System.String,PlayGen.SUGAR.Common.EvaluationDataType,System.Action{PlayGen.SUGAR.Contracts.EvaluationDataResponse})">
            <summary>
            Get the highest value for this user for the key provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.GameDataUnityClient.GetLowest(System.String,PlayGen.SUGAR.Common.EvaluationDataType,System.Action{PlayGen.SUGAR.Contracts.EvaluationDataResponse})">
            <summary>
            Get the lowest value for this user for the key provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.GameDataUnityClient.GetCumulative(System.String,PlayGen.SUGAR.Common.EvaluationDataType,System.Action{PlayGen.SUGAR.Contracts.EvaluationDataResponse})">
            <summary>
            Get the cumulative value for this user for the key provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.GameDataUnityClient.GetCount(System.String,PlayGen.SUGAR.Common.EvaluationDataType,System.Action{PlayGen.SUGAR.Contracts.EvaluationDataResponse})">
            <summary>
            Get the count for this user for the key provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.GameDataUnityClient.GetEarliest(System.String,PlayGen.SUGAR.Common.EvaluationDataType,System.Action{PlayGen.SUGAR.Contracts.EvaluationDataResponse})">
            <summary>
            Get the earliest value for this user for the key provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.GameDataUnityClient.GetLatest(System.String,PlayGen.SUGAR.Common.EvaluationDataType,System.Action{PlayGen.SUGAR.Contracts.EvaluationDataResponse})">
            <summary>
            Get the latest value for this user for the key provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.GameDataUnityClient.Send(System.String,System.String)">
            <summary>
            Send a piece of gamedata with key and value provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.GameDataUnityClient.Send(System.String,System.Int64)">
            <summary>
            Send a piece of gamedata with key and value provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.GameDataUnityClient.Send(System.String,System.Single)">
            <summary>
            Send a piece of gamedata with key and value provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.GameDataUnityClient.Send(System.String,System.Boolean)">
            <summary>
            Send a piece of gamedata with key and value provided.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.BaseGroupMemberInterface">
            <summary>
            Base abstract class for controlling the UI object related to group member lists.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseGroupMemberInterface._groupName">
            <summary>
            Text used for providing the group name for this list. Can be left null.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseGroupMemberInterface.HideInterfaces">
            <summary>
            Hides Account, Evaluation, Leaderboard, GameLeaderboard and UserFriend UI objects. Set groupName text to match name of CurrentGroup.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseGroupMemberInterface.ErrorDraw(System.Boolean)">
            <summary>
            Used to set error text in case of no user being signed in, loading issues or if no results are available.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseGroupMemberInterface.LoadErrorText">
            <summary>
            Get error string from Localization with key "GROUPS_LOAD_ERROR" if there were issues loading the evaluation list.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseGroupMemberInterface.NoResultsErrorText">
            <summary>
            Get error string from Localization with key "NO_RESULTS_ERROR" if there were no group members to display.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.BaseUserGroupInterface">
            <summary>
            Base abstract class for controlling the UI object related to user groups.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUserGroupInterface.HideInterfaces">
            <summary>
            Hides Account, Evaluation, Leaderboard, GameLeaderboard and UserFriend UI objects.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUserGroupInterface.LoadErrorText">
            <summary>
            Get error string from Localization with key "GROUPS_LOAD_ERROR" if there were issues loading the group list.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUserGroupInterface.NoResultsErrorText">
            <summary>
            Get error string from Localization with key "NO_RESULTS_ERROR" if there were no groups to display.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUserGroupInterface.GetGroups">
            <summary>
            Get and display the list of groups the currently signed in user is in.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUserGroupInterface.GetPendingSent">
            <summary>
            Get and display the list of groups the currently signed in user has applied to join.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseUserGroupInterface.GetSearchResults(System.String)">
            <summary>
            Get and display the list of groups that match the search string provided.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.GroupMemberUnityClient">
            <summary>
            Unity client for calls related to group member lists.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.GroupMemberUnityClient.CurrentGroup">
            <summary>
            Currently selected/displayed group.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.GroupMemberUnityClient.Members">
            <summary>
            Member list for the current group.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.GroupMemberUnityClient.Display(PlayGen.SUGAR.Contracts.ActorResponse)">
            <summary>
            Sets current group and gathers member list for that group. Displays UI object if provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.GroupMemberUnityClient.AddFriend(System.Int32,System.Boolean)">
            <summary>
            Send friend request to user with id provided. If reload is true, UI is also redrawn.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.UserGroupUnityClient">
            <summary>
            Unity client for calls related to group lists.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.UserGroupUnityClient.Groups">
            <summary>
            List of groups that the currently signed in user is a member of.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.UserGroupUnityClient.PendingSent">
            <summary>
            List of groups that the currently signed in user has applied to join.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.UserGroupUnityClient.SearchResults">
            <summary>
            List of groups that matched the last search string.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.UserGroupUnityClient.Display">
            <summary>
            Gathers updated versions of each list and displays UI object if provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.UserGroupUnityClient.AddGroup(System.Int32,System.Boolean)">
            <summary>
            Send group membership request to group with id provided. If reload is true, UI is also redrawn.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.UserGroupUnityClient.ManageGroupRequest(System.Int32,System.Boolean)">
            <summary>
            Cancel sent membership request to group with id provided. If reload is true, UI is also redrawn.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.UserGroupUnityClient.RemoveGroup(System.Int32,System.Boolean)">
            <summary>
            Leave group with id provided. If reload is true, UI is also redrawn.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.UserGroupUnityClient.GetGroupsList(System.Action{System.Boolean})">
            <summary>
            Get group list for the currently signed in user.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.BaseLeaderboardInterface">
            <summary>
            Base abstract class for controlling the UI object related to leaderboards
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseLeaderboardInterface._leaderboardName">
            <summary>
            Text used for displaying leaderboard name. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseLeaderboardInterface._leaderboardType">
            <summary>
            Text used for displaying current leaderboard filter. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseLeaderboardInterface._topButton">
            <summary>
            Button used to change the current leaderboard filter to 'Top'. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseLeaderboardInterface._nearButton">
            <summary>
            Button used to change the current leaderboard filter to 'Near'. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseLeaderboardInterface._friendsButton">
            <summary>
            Button used to change the current leaderboard filter to 'Friends'. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseLeaderboardInterface._membersButton">
            <summary>
            Button used to change the current leaderboard filter to 'Group Members'. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseLeaderboardInterface._alliancesButton">
            <summary>
            Button used to change the current leaderboard filter to 'Alliances'. Can be left null.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseLeaderboardInterface.Awake">
            <summary>
            Base Awake method adds onClick listeners for the close, signin, top, near and friends filter buttons.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseLeaderboardInterface.HideInterfaces">
            <summary>
            Hides Account, Evaluation, UserFriend, GroupMember and UserGroup UI objects. Makes filter buttons interactable.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseLeaderboardInterface.ErrorDraw(System.Boolean)">
            <summary>
            Used to set error text in case of no user being signed in, loading issues or if no results are available.
            Filter button interactable set to false if no user is signed in or loading issues occur.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseLeaderboardInterface.LoadErrorText">
            <summary>
            Get error string from Localization with key "LEADERBOARD_LOAD_ERROR" if there were issues loading the leaderboard standings list.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseLeaderboardInterface.NoResultsErrorText">
            <summary>
            Get error string from Localization with key "NO_LEADERBOARD_ERROR" if there were no leaderboard standings to display.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.BaseLeaderboardListInterface">
            <summary>
            Base abstract class for controlling the UI object related to getting all leaderboards for a game
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseLeaderboardListInterface._leaderboardType">
            <summary>
            Text used for displaying current leaderboard type. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseLeaderboardListInterface._userButton">
            <summary>
            Button used to change the current actor type filter to 'User'. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseLeaderboardListInterface._groupButton">
            <summary>
            Button used to change the current actor type filter to 'Group'. Can be left null.
            </summary>
        </member>
        <member name="F:PlayGen.SUGAR.Unity.BaseLeaderboardListInterface._combinedButton">
            <summary>
            Button used to change the current actor type filter to 'Combined'. Can be left null.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseLeaderboardListInterface.Awake">
            <summary>
            Base Awake method adds onClick listeners for the close, signin, user, group and combined filter buttons.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseLeaderboardListInterface.HideInterfaces">
            <summary>
            Hides Account, Evaluation, UserFriend, GroupMember and UserGroup UI objects. Makes filter buttons interactable.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseLeaderboardListInterface.ErrorDraw(System.Boolean)">
            <summary>
            Used to set error text in case of no user being signed in, loading issues or if no leaderboards are available.
            Filter button interactable set to false if no user is signed in or loading issues occur.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseLeaderboardListInterface.LoadErrorText">
            <summary>
            Get error string from Localization with key "LEADERBOARD_LIST_LOAD_ERROR" if there were issues loading the leaderboard list.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.BaseLeaderboardListInterface.NoResultsErrorText">
            <summary>
            Get error string from Localization with key "NO_LEADERBOARD_LIST_ERROR" if there were no leaderboards to display.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.LeaderboardListUnityClient">
            <summary>
            Unity client for calls related to leaderboards for an application.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.LeaderboardListUnityClient.Leaderboards">
            <summary>
            List of leaderboards for this application for each ActorType filter.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.LeaderboardListUnityClient.CurrentActorType">
            <summary>
            Currently used ActorType filter.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.LeaderboardListUnityClient.DisplayGlobalList(PlayGen.SUGAR.Common.ActorType)">
            <summary>
            Gathers leaderboards for this application and displays list for current ActorType if UI object if provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.LeaderboardListUnityClient.DisplayGameList(PlayGen.SUGAR.Common.ActorType)">
            <summary>
            Gathers leaderboards for this application and displays list for current ActorType if UI object if provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.LeaderboardListUnityClient.SetFilter(PlayGen.SUGAR.Common.ActorType)">
            <summary>
            Set the ActorType filter to use.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.LeaderboardUnityClient">
            <summary>
            Unity client for calls related to leaderboard standings.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.LeaderboardUnityClient.CurrentFilter">
            <summary>
            Current filter to use for gathering leaderboard standings.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.LeaderboardUnityClient.CurrentLeaderboard">
            <summary>
            Current leaderboard to use for gathering leaderboard standings from.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.LeaderboardUnityClient.CurrentStandings">
            <summary>
            Last set of standings gathered.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.LeaderboardUnityClient.PositionCount">
            <summary>
            Number of results that should be gathered per call.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.LeaderboardUnityClient.Display(System.String,PlayGen.SUGAR.Common.LeaderboardFilterType,System.Int32,System.Boolean)">
            <summary>
            Gathers information on the leaderboard with the token provided and gets current standings based on the filter and page number provided, with the UI object displayed if provided.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.LeaderboardUnityClient.GetLeaderboardStandings(System.Int32,System.Action{System.Boolean},System.Action{System.Collections.Generic.List{PlayGen.SUGAR.Contracts.LeaderboardStandingsResponse}})">
            <summary>
            Get standings for the current leaderboard. A request for results to be returned means that the standings gotten will not be stored. Otherwise, they will be saved into CurrentStandings.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.LeaderboardUnityClient.SetPositionCount(System.Int32)">
            <summary>
            Set the number of results to get at most per call.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.ResourceUnityClient">
            <summary>
            Unity client for calls related to resources.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.ResourceUnityClient.UserGameResources">
            <summary>
            Resources for the currently signed in user for this game.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.ResourceUnityClient.GlobalUserResources">
            <summary>
            Resources for the user not tied to any game.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.ResourceUnityClient.Get(System.Action{System.Collections.Generic.List{PlayGen.SUGAR.Contracts.ResourceResponse}},System.String[],System.Boolean)">
            <summary>
            Get the resources with the keys provided for the signed in user.
            If globalResource is true, resources will be global rather than for the game.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.ResourceUnityClient.Transfer(System.Int32,System.String,System.Int64,System.Action{System.Boolean},System.Boolean)">
            <summary>
            Transfer the resource with the key provided from the currently signed in user to the user with the provided id.
            If globalResource is true, resource transferred will be global rather than for the game.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.ResourceUnityClient.TryTake(System.Int32,System.String,System.Int64,System.Action{System.Boolean},System.Boolean)">
            <summary>
            Attempt to Take a resource from an actor.
            If globalResource is true, resource transferred will be global rather than for the game.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.ResourceUnityClient.Add(System.String,System.Int64,System.Action{System.Boolean},System.Boolean)">
            <summary>
            Add the resource with the key provided from the currently signed in user.
            If globalResource is true, resource transferred will be global rather than for the game.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.SUGARManager">
            <summary>
            Access point for SUGAR related classes.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.GameId">
            <summary>
            GameId for this application.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.CurrentUser">
            <summary>
            Currently signed in user. WARNING: Only set this value if completely necessary.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.CurrentGroup">
            <summary>
            Currently signed in user's group. WARNING: Only set this value if completely necessary.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.ClassId">
            <summary>
            Group name gathered from auto sign in. WARNING: Only set this value if completely necessary.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.Account">
            <summary>
            Unity client for calls related to accounts
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.Evaluation">
            <summary>
            Unity client for calls related to evaluations
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.UserFriend">
            <summary>
            Unity client for calls related to friend lists
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.GameData">
            <summary>
            Unity client for calls related to gamedata
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.GroupMember">
            <summary>
            Unity client for calls related to group members
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.GameLeaderboard">
            <summary>
            Unity client for calls related to leaderboard lists
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.Leaderboard">
            <summary>
            Unity client for calls related to leaderboard standings
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.Resource">
            <summary>
            Unity client for calls related to resources
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.UserGroup">
            <summary>
            Unity client for calls related to user groups
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.Unity">
            <summary>
            Class for managing Unity elements of the asset
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARManager.Client">
            <summary>
            Class for contacting SUGAR client functionality
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Unity.SUGARUnityManager">
            <summary>
            Class for managing Unity elements of the asset
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Unity.SUGARUnityManager.AnyActiveUI">
            <summary>
            Is any piece of SUGAR UI currently active?
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.SUGARUnityManager.SetBlocker(System.Boolean,System.Boolean)">
            <summary>
            Set if the blocker should be used and if it should close objects when clicked
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.SUGARUnityManager.EnableObject(UnityEngine.GameObject)">
            <summary>
            Enable a piece of SUGAR UI.
            This should be used instead of SetActive to ensure UI and blocker ordering is correct.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.SUGARUnityManager.DisableObject(UnityEngine.GameObject)">
            <summary>
            Disable a piece of SUGAR UI.
            This should be used instead of SetActive to ensure UI and blocker ordering is correct.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.SUGARUnityManager.SetSpinner(System.Boolean,System.Int32)">
            <summary>
            Set the direction and speed of the loading spinner
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.SUGARUnityManager.StartSpinner(System.String)">
            <summary>
            Start the loading spinner.
            This method should be used instead of directly calling Loading.Start to ensure UI and blocker ordering is correct.
            </summary>
        </member>
        <member name="M:PlayGen.SUGAR.Unity.SUGARUnityManager.StopSpinner(System.String,System.Single)">
            <summary>
            Stop the loading spinner.
            This method should be used instead of directly calling Loading.Stop to ensure UI and blocker ordering is correct.
            </summary>
        </member>
    </members>
</doc>
